From 1b94c915a6b1259db59bef354b15590d53024cd4 Mon Sep 17 00:00:00 2001
From: commandblock2 <tony_hu@live.com>
Date: Sun, 2 Feb 2025 03:44:46 +0800
Subject: [PATCH] feat-full-event-definitions

---
 .../bindings/features/ScriptModule.d.ts       | 224 +++++++++++++++++-
 1 file changed, 223 insertions(+), 1 deletion(-)

diff --git a/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/script/bindings/features/ScriptModule.d.ts b/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/script/bindings/features/ScriptModule.d.ts
index d2d1f0c..12d370c 100644
--- a/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/script/bindings/features/ScriptModule.d.ts
+++ b/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/script/bindings/features/ScriptModule.d.ts
@@ -17,6 +17,117 @@ import type { PolyglotScript } from '../../../../../../net/ccbluex/liquidbounce/
 import type { Supplier } from '../../../../../../java/util/function/Supplier.d.ts'
 import type { Unit } from '../../../../../../kotlin/Unit.d.ts'
 import type { Event } from '../../../../../../net/ccbluex/liquidbounce/event/Event.d.ts'
+
+
+// imports for
+import type { GameTickEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/GameTickEvent.d.ts'
+import type { GameRenderTaskQueueEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/GameRenderTaskQueueEvent.d.ts'
+import type { BlockChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/BlockChangeEvent.d.ts'
+import type { ChunkLoadEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ChunkLoadEvent.d.ts'
+import type { ChunkDeltaUpdateEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ChunkDeltaUpdateEvent.d.ts'
+import type { ChunkUnloadEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ChunkUnloadEvent.d.ts'
+import type { DisconnectEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/DisconnectEvent.d.ts'
+import type { GameRenderEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/GameRenderEvent.d.ts'
+import type { DrawOutlinesEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/DrawOutlinesEvent.d.ts'
+import type { OverlayRenderEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/OverlayRenderEvent.d.ts'
+import type { ScreenRenderEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ScreenRenderEvent.d.ts'
+import type { WindowResizeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/WindowResizeEvent.d.ts'
+import type { FrameBufferResizeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/FrameBufferResizeEvent.d.ts'
+import type { MouseButtonEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/MouseButtonEvent.d.ts'
+import type { MouseScrollEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/MouseScrollEvent.d.ts'
+import type { MouseCursorEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/MouseCursorEvent.d.ts'
+import type { KeyboardKeyEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/KeyboardKeyEvent.d.ts'
+import type { KeyboardCharEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/KeyboardCharEvent.d.ts'
+import type { InputHandleEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/InputHandleEvent.d.ts'
+import type { MovementInputEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/MovementInputEvent.d.ts'
+import type { SprintEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/SprintEvent.d.ts'
+import type { KeyEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/KeyEvent.d.ts'
+import type { MouseRotationEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/MouseRotationEvent.d.ts'
+import type { KeybindChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/KeybindChangeEvent.d.ts'
+import type { KeybindIsPressedEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/KeybindIsPressedEvent.d.ts'
+import type { AttackEntityEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/AttackEntityEvent.d.ts'
+import type { SessionEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/SessionEvent.d.ts'
+import type { ScreenEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ScreenEvent.d.ts'
+import type { ChatSendEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ChatSendEvent.d.ts'
+import type { ChatReceiveEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ChatReceiveEvent.d.ts'
+import type { UseCooldownEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/UseCooldownEvent.d.ts'
+import type { BlockShapeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/BlockShapeEvent.d.ts'
+import type { BlockAttackEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/BlockAttackEvent.d.ts'
+import type { BlockVelocityMultiplierEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/BlockVelocityMultiplierEvent.d.ts'
+import type { BlockSlipperinessMultiplierEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/BlockSlipperinessMultiplierEvent.d.ts'
+import type { EntityMarginEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/EntityMarginEvent.d.ts'
+import type { HealthUpdateEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/HealthUpdateEvent.d.ts'
+import type { DeathEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/DeathEvent.d.ts'
+import type { PlayerTickEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerTickEvent.d.ts'
+import type { PlayerPostTickEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerPostTickEvent.d.ts'
+import type { PlayerMovementTickEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerMovementTickEvent.d.ts'
+import type { PlayerNetworkMovementTickEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerNetworkMovementTickEvent.d.ts'
+import type { PlayerPushOutEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerPushOutEvent.d.ts'
+import type { PlayerMoveEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerMoveEvent.d.ts'
+import type { PlayerJumpEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerJumpEvent.d.ts'
+import type { PlayerAfterJumpEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerAfterJumpEvent.d.ts'
+import type { PlayerUseMultiplier } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerUseMultiplier.d.ts'
+import type { PlayerInteractedItem } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerInteractedItem.d.ts'
+import type { PlayerVelocityStrafe } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerVelocityStrafe.d.ts'
+import type { PlayerStrideEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerStrideEvent.d.ts'
+import type { PlayerSafeWalkEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerSafeWalkEvent.d.ts'
+import type { CancelBlockBreakingEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/CancelBlockBreakingEvent.d.ts'
+import type { PlayerStepEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerStepEvent.d.ts'
+import type { PlayerStepSuccessEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerStepSuccessEvent.d.ts'
+import type { FluidPushEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/FluidPushEvent.d.ts'
+import type { PipelineEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PipelineEvent.d.ts'
+import type { PacketEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PacketEvent.d.ts'
+import type { ClientStartEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ClientStartEvent.d.ts'
+import type { ClientShutdownEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ClientShutdownEvent.d.ts'
+import type { ClientLanguageChangedEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ClientLanguageChangedEvent.d.ts'
+import type { ValueChangedEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ValueChangedEvent.d.ts'
+import type { ModuleActivationEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ModuleActivationEvent.d.ts'
+import type { ModuleToggleEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ModuleToggleEvent.d.ts'
+import type { NotificationEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/NotificationEvent.d.ts'
+import type { ClientChatStateChange } from '../../../../../../net/ccbluex/liquidbounce/event/events/ClientChatStateChange.d.ts'
+import type { ClientChatMessageEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ClientChatMessageEvent.d.ts'
+import type { ClientChatErrorEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ClientChatErrorEvent.d.ts'
+import type { ClientChatJwtTokenEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ClientChatJwtTokenEvent.d.ts'
+import type { WorldChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/WorldChangeEvent.d.ts'
+import type { AccountManagerMessageEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/AccountManagerMessageEvent.d.ts'
+import type { AccountManagerAdditionResultEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/AccountManagerAdditionResultEvent.d.ts'
+import type { AccountManagerLoginResultEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/AccountManagerLoginResultEvent.d.ts'
+import type { VirtualScreenEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/VirtualScreenEvent.d.ts'
+import type { FpsChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/FpsChangeEvent.d.ts'
+import type { ClientPlayerDataEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ClientPlayerDataEvent.d.ts'
+import type { RotationUpdateEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/RotationUpdateEvent.d.ts'
+import type { SplashOverlayEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/SplashOverlayEvent.d.ts'
+import type { SplashProgressEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/SplashProgressEvent.d.ts'
+import type { RefreshArrayListEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/RefreshArrayListEvent.d.ts'
+import type { BrowserReadyEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/BrowserReadyEvent.d.ts'
+import type { ServerConnectEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ServerConnectEvent.d.ts'
+import type { ServerPingedEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ServerPingedEvent.d.ts'
+import type { TargetChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/TargetChangeEvent.d.ts'
+import type { BlockCountChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/BlockCountChangeEvent.d.ts'
+import type { GameModeChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/GameModeChangeEvent.d.ts'
+import type { ComponentsUpdate } from '../../../../../../net/ccbluex/liquidbounce/event/events/ComponentsUpdate.d.ts'
+import type { ResourceReloadEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ResourceReloadEvent.d.ts'
+import type { ProxyAdditionResultEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ProxyAdditionResultEvent.d.ts'
+import type { ProxyEditResultEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ProxyEditResultEvent.d.ts'
+import type { ProxyCheckResultEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ProxyCheckResultEvent.d.ts'
+import type { ScaleFactorChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ScaleFactorChangeEvent.d.ts'
+import type { OverlayMessageEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/OverlayMessageEvent.d.ts'
+import type { ScheduleInventoryActionEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ScheduleInventoryActionEvent.d.ts'
+import type { SpaceSeperatedNamesChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/SpaceSeperatedNamesChangeEvent.d.ts'
+import type { ClickGuiScaleChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ClickGuiScaleChangeEvent.d.ts'
+import type { BrowserUrlChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/BrowserUrlChangeEvent.d.ts'
+import type { TagEntityEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/TagEntityEvent.d.ts'
+import type { MouseScrollInHotbarEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/MouseScrollInHotbarEvent.d.ts'
+import type { PlayerFluidCollisionCheckEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerFluidCollisionCheckEvent.d.ts'
+import type { PlayerSneakMultiplier } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerSneakMultiplier.d.ts'
+import type { PerspectiveEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PerspectiveEvent.d.ts'
+import type { ItemLoreQueryEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ItemLoreQueryEvent.d.ts'
+import type { PlayerEquipmentChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/PlayerEquipmentChangeEvent.d.ts'
+import type { ClickGuiValueChangeEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/ClickGuiValueChangeEvent.d.ts'
+import type { QueuePacketEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/QueuePacketEvent.d.ts'
+import type { MinecraftAutoJumpEvent } from '../../../../../../net/ccbluex/liquidbounce/event/events/MinecraftAutoJumpEvent.d.ts'
+
+
 export class ScriptModule extends ClientModule {
     static Companion: ScriptModule$Companion;
     static getEnabled$annotations(): Void;
@@ -38,11 +149,122 @@ export class ScriptModule extends ClientModule {
     description: Supplier<string | null>;
     // private events: { [key: string]: Function1<Object | null, Unit> };
     script: PolyglotScript;
-    settings: { [key: string]: Value<Object | null> };
+    // settings: { [key: string]: Value<Object | null> };
     tag: string | null;
     // private callEvent(event: string, payload: Event | null): Unit;
     disable(): Unit;
     enable(): Unit;
     // private hookHandler(eventName: string): Unit;
     on(eventName: string, handler: Function1<Object | null, Unit>): Unit;
+    on(eventName: "enable" | "disable", handler: () => void): Unit;
+    
+    // on events
+    on(eventName: "gametick", handler: (gametickEvent: GameTickEvent) => void): Unit;
+    on(eventName: "gamerendertaskqueue", handler: (gamerendertaskqueueEvent: GameRenderTaskQueueEvent) => void): Unit;
+    on(eventName: "blockchange", handler: (blockchangeEvent: BlockChangeEvent) => void): Unit;
+    on(eventName: "chunkload", handler: (chunkloadEvent: ChunkLoadEvent) => void): Unit;
+    on(eventName: "chunkdeltaupdate", handler: (chunkdeltaupdateEvent: ChunkDeltaUpdateEvent) => void): Unit;
+    on(eventName: "chunkunload", handler: (chunkunloadEvent: ChunkUnloadEvent) => void): Unit;
+    on(eventName: "disconnect", handler: (disconnectEvent: DisconnectEvent) => void): Unit;
+    on(eventName: "gamerender", handler: (gamerenderEvent: GameRenderEvent) => void): Unit;
+    on(eventName: "worldrender", handler: (worldrenderEvent: DrawOutlinesEvent) => void): Unit;
+    on(eventName: "overlayrender", handler: (overlayrenderEvent: OverlayRenderEvent) => void): Unit;
+    on(eventName: "screenrender", handler: (screenrenderEvent: ScreenRenderEvent) => void): Unit;
+    on(eventName: "windowresize", handler: (windowresizeEvent: WindowResizeEvent) => void): Unit;
+    on(eventName: "framebufferresize", handler: (framebufferresizeEvent: FrameBufferResizeEvent) => void): Unit;
+    on(eventName: "mousebutton", handler: (mousebuttonEvent: MouseButtonEvent) => void): Unit;
+    on(eventName: "mousescroll", handler: (mousescrollEvent: MouseScrollEvent) => void): Unit;
+    on(eventName: "mousecursor", handler: (mousecursorEvent: MouseCursorEvent) => void): Unit;
+    on(eventName: "keyboardkey", handler: (keyboardkeyEvent: KeyboardKeyEvent) => void): Unit;
+    on(eventName: "keyboardchar", handler: (keyboardcharEvent: KeyboardCharEvent) => void): Unit;
+    on(eventName: "inputhandle", handler: (inputhandleEvent: InputHandleEvent) => void): Unit;
+    on(eventName: "movementinput", handler: (movementinputEvent: MovementInputEvent) => void): Unit;
+    on(eventName: "sprint", handler: (sprintEvent: SprintEvent) => void): Unit;
+    on(eventName: "key", handler: (keyEvent: KeyEvent) => void): Unit;
+    on(eventName: "mouserotation", handler: (mouserotationEvent: MouseRotationEvent) => void): Unit;
+    on(eventName: "keybindchange", handler: (keybindchangeEvent: KeybindChangeEvent) => void): Unit;
+    on(eventName: "keybindispressed", handler: (keybindispressedEvent: KeybindIsPressedEvent) => void): Unit;
+    on(eventName: "attack", handler: (attackEvent: AttackEntityEvent) => void): Unit;
+    on(eventName: "session", handler: (sessionEvent: SessionEvent) => void): Unit;
+    on(eventName: "screen", handler: (screenEvent: ScreenEvent) => void): Unit;
+    on(eventName: "chatsend", handler: (chatsendEvent: ChatSendEvent) => void): Unit;
+    on(eventName: "chatreceive", handler: (chatreceiveEvent: ChatReceiveEvent) => void): Unit;
+    on(eventName: "usecooldown", handler: (usecooldownEvent: UseCooldownEvent) => void): Unit;
+    on(eventName: "blockshape", handler: (blockshapeEvent: BlockShapeEvent) => void): Unit;
+    on(eventName: "blockbreakingprogress", handler: (blockbreakingprogressEvent: BlockAttackEvent) => void): Unit;
+    on(eventName: "blockvelocitymultiplier", handler: (blockvelocitymultiplierEvent: BlockVelocityMultiplierEvent) => void): Unit;
+    on(eventName: "blockslipperinessmultiplier", handler: (blockslipperinessmultiplierEvent: BlockSlipperinessMultiplierEvent) => void): Unit;
+    on(eventName: "entitymargin", handler: (entitymarginEvent: EntityMarginEvent) => void): Unit;
+    on(eventName: "healthupdate", handler: (healthupdateEvent: HealthUpdateEvent) => void): Unit;
+    on(eventName: "death", handler: (deathEvent: DeathEvent) => void): Unit;
+    on(eventName: "playertick", handler: (playertickEvent: PlayerTickEvent) => void): Unit;
+    on(eventName: "playerposttick", handler: (playerposttickEvent: PlayerPostTickEvent) => void): Unit;
+    on(eventName: "playermovementtick", handler: (playermovementtickEvent: PlayerMovementTickEvent) => void): Unit;
+    on(eventName: "playernetworkmovementtick", handler: (playernetworkmovementtickEvent: PlayerNetworkMovementTickEvent) => void): Unit;
+    on(eventName: "playerpushout", handler: (playerpushoutEvent: PlayerPushOutEvent) => void): Unit;
+    on(eventName: "playermove", handler: (playermoveEvent: PlayerMoveEvent) => void): Unit;
+    on(eventName: "playerjump", handler: (playerjumpEvent: PlayerJumpEvent) => void): Unit;
+    on(eventName: "playerafterjump", handler: (playerafterjumpEvent: PlayerAfterJumpEvent) => void): Unit;
+    on(eventName: "playerusemultiplier", handler: (playerusemultiplierEvent: PlayerUseMultiplier) => void): Unit;
+    on(eventName: "playerinteracteditem", handler: (playerinteracteditemEvent: PlayerInteractedItem) => void): Unit;
+    on(eventName: "playerstrafe", handler: (playerstrafeEvent: PlayerVelocityStrafe) => void): Unit;
+    on(eventName: "playerstride", handler: (playerstrideEvent: PlayerStrideEvent) => void): Unit;
+    on(eventName: "playersafewalk", handler: (playersafewalkEvent: PlayerSafeWalkEvent) => void): Unit;
+    on(eventName: "cancelblockbreaking", handler: (cancelblockbreakingEvent: CancelBlockBreakingEvent) => void): Unit;
+    on(eventName: "playerstep", handler: (playerstepEvent: PlayerStepEvent) => void): Unit;
+    on(eventName: "playerstepsuccess", handler: (playerstepsuccessEvent: PlayerStepSuccessEvent) => void): Unit;
+    on(eventName: "fluidpush", handler: (fluidpushEvent: FluidPushEvent) => void): Unit;
+    on(eventName: "pipeline", handler: (pipelineEvent: PipelineEvent) => void): Unit;
+    on(eventName: "packet", handler: (packetEvent: PacketEvent) => void): Unit;
+    on(eventName: "clientstart", handler: (clientstartEvent: ClientStartEvent) => void): Unit;
+    on(eventName: "clientshutdown", handler: (clientshutdownEvent: ClientShutdownEvent) => void): Unit;
+    on(eventName: "clientlanguagechanged", handler: (clientlanguagechangedEvent: ClientLanguageChangedEvent) => void): Unit;
+    on(eventName: "valuechanged", handler: (valuechangedEvent: ValueChangedEvent) => void): Unit;
+    on(eventName: "moduleactivation", handler: (moduleactivationEvent: ModuleActivationEvent) => void): Unit;
+    on(eventName: "moduletoggle", handler: (moduletoggleEvent: ModuleToggleEvent) => void): Unit;
+    on(eventName: "notification", handler: (notificationEvent: NotificationEvent) => void): Unit;
+    on(eventName: "clientchatstatechange", handler: (clientchatstatechangeEvent: ClientChatStateChange) => void): Unit;
+    on(eventName: "clientchatmessage", handler: (clientchatmessageEvent: ClientChatMessageEvent) => void): Unit;
+    on(eventName: "clientchaterror", handler: (clientchaterrorEvent: ClientChatErrorEvent) => void): Unit;
+    on(eventName: "clientchatjwttoken", handler: (clientchatjwttokenEvent: ClientChatJwtTokenEvent) => void): Unit;
+    on(eventName: "worldchange", handler: (worldchangeEvent: WorldChangeEvent) => void): Unit;
+    on(eventName: "accountmanagermessage", handler: (accountmanagermessageEvent: AccountManagerMessageEvent) => void): Unit;
+    on(eventName: "accountmanageraddition", handler: (accountmanageradditionEvent: AccountManagerAdditionResultEvent) => void): Unit;
+    on(eventName: "accountmanagerlogin", handler: (accountmanagerloginEvent: AccountManagerLoginResultEvent) => void): Unit;
+    on(eventName: "virtualscreen", handler: (virtualscreenEvent: VirtualScreenEvent) => void): Unit;
+    on(eventName: "fps", handler: (fpsEvent: FpsChangeEvent) => void): Unit;
+    on(eventName: "clientplayerdata", handler: (clientplayerdataEvent: ClientPlayerDataEvent) => void): Unit;
+    on(eventName: "rotationupdate", handler: (rotationupdateEvent: RotationUpdateEvent) => void): Unit;
+    on(eventName: "splashoverlay", handler: (splashoverlayEvent: SplashOverlayEvent) => void): Unit;
+    on(eventName: "splashprogress", handler: (splashprogressEvent: SplashProgressEvent) => void): Unit;
+    on(eventName: "refresharraylist", handler: (refresharraylistEvent: RefreshArrayListEvent) => void): Unit;
+    on(eventName: "browserready", handler: (browserreadyEvent: BrowserReadyEvent) => void): Unit;
+    on(eventName: "serverconnect", handler: (serverconnectEvent: ServerConnectEvent) => void): Unit;
+    on(eventName: "serverpinged", handler: (serverpingedEvent: ServerPingedEvent) => void): Unit;
+    on(eventName: "targetchange", handler: (targetchangeEvent: TargetChangeEvent) => void): Unit;
+    on(eventName: "blockcountchange", handler: (blockcountchangeEvent: BlockCountChangeEvent) => void): Unit;
+    on(eventName: "gamemodechange", handler: (gamemodechangeEvent: GameModeChangeEvent) => void): Unit;
+    on(eventName: "componentsupdate", handler: (componentsupdateEvent: ComponentsUpdate) => void): Unit;
+    on(eventName: "resourcereload", handler: (resourcereloadEvent: ResourceReloadEvent) => void): Unit;
+    on(eventName: "proxyadditionresult", handler: (proxyadditionresultEvent: ProxyAdditionResultEvent) => void): Unit;
+    on(eventName: "proxyeditresult", handler: (proxyeditresultEvent: ProxyEditResultEvent) => void): Unit;
+    on(eventName: "proxycheckresult", handler: (proxycheckresultEvent: ProxyCheckResultEvent) => void): Unit;
+    on(eventName: "scalefactorchange", handler: (scalefactorchangeEvent: ScaleFactorChangeEvent) => void): Unit;
+    on(eventName: "overlaymessage", handler: (overlaymessageEvent: OverlayMessageEvent) => void): Unit;
+    on(eventName: "scheduleinventoryaction", handler: (scheduleinventoryactionEvent: ScheduleInventoryActionEvent) => void): Unit;
+    on(eventName: "spaceseperatednameschange", handler: (spaceseperatednameschangeEvent: SpaceSeperatedNamesChangeEvent) => void): Unit;
+    on(eventName: "clickguiscalechange", handler: (clickguiscalechangeEvent: ClickGuiScaleChangeEvent) => void): Unit;
+    on(eventName: "browserurlchange", handler: (browserurlchangeEvent: BrowserUrlChangeEvent) => void): Unit;
+    on(eventName: "tagentityevent", handler: (tagentityeventEvent: TagEntityEvent) => void): Unit;
+    on(eventName: "mousescrollinhotbar", handler: (mousescrollinhotbarEvent: MouseScrollInHotbarEvent) => void): Unit;
+    on(eventName: "playerfluidcollisioncheck", handler: (playerfluidcollisioncheckEvent: PlayerFluidCollisionCheckEvent) => void): Unit;
+    on(eventName: "playersneakmultiplier", handler: (playersneakmultiplierEvent: PlayerSneakMultiplier) => void): Unit;
+    on(eventName: "perspective", handler: (perspectiveEvent: PerspectiveEvent) => void): Unit;
+    on(eventName: "itemlorequery", handler: (itemlorequeryEvent: ItemLoreQueryEvent) => void): Unit;
+    on(eventName: "entityequipmentchange", handler: (entityequipmentchangeEvent: PlayerEquipmentChangeEvent) => void): Unit;
+    on(eventName: "clickguivaluechange", handler: (clickguivaluechangeEvent: ClickGuiValueChangeEvent) => void): Unit;
+    on(eventName: "queuepacket", handler: (queuepacketEvent: QueuePacketEvent) => void): Unit;
+    on(eventName: "autojump", handler: (autojumpEvent: MinecraftAutoJumpEvent) => void): Unit;
+
+
 }
\ No newline at end of file
-- 
2.47.1

