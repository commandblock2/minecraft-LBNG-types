From acf773a653fad1006fef0795c457398843f0a7e5 Mon Sep 17 00:00:00 2001
From: commandblock2 <tony_hu@live.com>
Date: Fri, 14 Feb 2025 01:03:23 +0800
Subject: [PATCH] feat-full-script-setting-support

---
 .../config/types/RangedValue.d.ts             |  1 +
 .../liquidbounce/config/types/Value.d.ts      | 24 +++++++++++++++----
 .../liquidbounce/script/PolyglotScript.d.ts   | 15 ++++++++----
 .../bindings/features/ScriptSetting.d.ts      |  2 +-
 4 files changed, 32 insertions(+), 10 deletions(-)

diff --git a/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/config/types/RangedValue.d.ts b/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/config/types/RangedValue.d.ts
index 828af95..d505f7b 100644
--- a/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/config/types/RangedValue.d.ts
+++ b/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/config/types/RangedValue.d.ts
@@ -8,4 +8,5 @@ export class RangedValue<T extends Object> extends Value<T> {
     range: ClosedRange<Object | null>;
     suffix: string;
     setByString(string: string): Unit;
+
 }
\ No newline at end of file
diff --git a/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/config/types/Value.d.ts b/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/config/types/Value.d.ts
index 3f81a21..669a829 100644
--- a/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/config/types/Value.d.ts
+++ b/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/config/types/Value.d.ts
@@ -10,6 +10,9 @@ import type { Function0 } from '../../../../../kotlin/jvm/functions/Function0.d.
 import type { KProperty } from '../../../../../kotlin/reflect/KProperty.d.ts'
 import type { Value } from '../../../../../org/graalvm/polyglot/Value.d.ts'
 import type { Result } from '../../../../../kotlin/Result.d.ts'
+import type { ClosedFloatingPointRange } from '../../../../../kotlin/ranges/ClosedFloatingPointRange.d.ts'
+import type { InputUtil$Key } from '../../../../../net/minecraft/client/util/InputUtil$Key.d.ts'
+import type { NamedChoice } from './NamedChoice.d.ts'
 export class Value<T extends Object> extends Object {
     constructor(name: string, defaultValue: T, valueType: ValueType, listType: ListValueType, independentDescription: boolean)
     // private getChangedListeners(): Function1<T, Unit>[];
@@ -30,8 +33,8 @@ export class Value<T extends Object> extends Object {
     doNotIncludeAlways(): Value<T>;
     doNotIncludeWhen(condition: Function0<boolean>): Value<T>;
     get(): T;
-    getValue(u: Object | null, property: KProperty<Object | null>): T;
-    getValue(): Object;
+    // getValue(u: Object | null, property: KProperty<Object | null>): T;
+    getValue(): T;
     independentDescription(): Value<T>;
     notAnOption(): Value<T>;
     onChange(listener: Function1<T, T>): Value<T>;
@@ -40,7 +43,20 @@ export class Value<T extends Object> extends Object {
     set(t: T): Unit;
     set(t: T, apply: Function1<T, Unit>): Unit;
     setByString(string: string): Unit;
-    setValue(u: Object | null, property: KProperty<Object | null>, t: T): Unit;
-    setValue(t: Value): Result<Unit>;
+    // setValue(u: Object | null, property: KProperty<Object | null>, t: T): Unit;
+    // setValue(t: Value): Result<Unit>;
+    setValue(value: T): Unit;
     type(): ValueType;
+
+    getValue(): T extends ClosedFloatingPointRange<number> ? number[] : T;
+    setValue(value: T extends ClosedFloatingPointRange<number> ? number[] | T : T): Unit;
+
+    // Special case for key values
+    getValue(): T extends InputUtil$Key ? string : T;
+    setValue(value: T extends InputUtil$Key ? string | T : T): Unit;
+
+    // Special case for named choices
+    getValue(): T extends NamedChoice ? string : T;
+    setValue(value: T extends NamedChoice ? string | T : T): Unit;
+
 }
\ No newline at end of file
diff --git a/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/script/PolyglotScript.d.ts b/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/script/PolyglotScript.d.ts
index c82dff5..9d82855 100644
--- a/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/script/PolyglotScript.d.ts
+++ b/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/script/PolyglotScript.d.ts
@@ -13,13 +13,15 @@ import { ScriptModule } from './bindings/features/ScriptModule.js'
 import { Value } from '../config/types/Value.js'
 import { Value as PolyglotValue } from 'org/graalvm/polyglot/Value.js'
 
-interface ModuleObject {
+type SettingsToValues<T> = {
+    [K in keyof T]: T[K] extends Value<any> ? T[K] : never;
+}
+
+interface ModuleObject<TSettings = any> {
     name: string;
     category: string;
     description: string;
-    settings?: {
-        [key: string]: Value<any>
-    };
+    settings?: TSettings
 }
 
 interface CommandObject {
@@ -61,5 +63,8 @@ export class PolyglotScript extends Object {
     registerChoice(choiceConfigurable: ChoiceConfigurable<Choice>, choiceObject: { [key: string]: Object }, callback: Function1<Choice, Unit>): Unit;
 
     registerCommand(commandObject: CommandObject): Unit;
-    registerModule(moduleObject: ModuleObject, callback: (module: ScriptModule) => void): Unit;
+    registerModule<TSettings>(
+                moduleObject: ModuleObject<TSettings>, 
+                callback: (module: ScriptModule & { settings: SettingsToValues<TSettings> }) => void
+    ): Unit;
 }
diff --git a/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/script/bindings/features/ScriptSetting.d.ts b/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/script/bindings/features/ScriptSetting.d.ts
index ab81847..11ab65e 100644
--- a/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/script/bindings/features/ScriptSetting.d.ts
+++ b/minecraft-yarn-definitions/types/net/ccbluex/liquidbounce/script/bindings/features/ScriptSetting.d.ts
@@ -66,7 +66,7 @@ export class ScriptSetting extends Object {
     float(value: FloatValue): RangedValue<number>;
     floatRange(value: FloatRangeValue): RangedValue<ClosedFloatingPointRange<number>>;
     int(value: IntValue): RangedValue<number>;
-    intRange(value: IntRangeValue): RangedValue<(Object | null)[]>;
+    intRange(value: IntRangeValue): RangedValue<number[]>;
     key(value: KeyValue): Value<InputUtil$Key>;    text(value: TextView): Value<string>;
     textArray(value: TextArrayValue): Value<string[]>;
     // ... existing code ...
-- 
2.47.1

